---
import "@styles/global.css";

import Footer from "@components/Footer.astro";
import Nav from "@components/Nav.astro";

interface Props {
  title: string;
}

const { title } = Astro.props;

const description = "The personal site of Luis Mastrangelo";
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta name="description" property="og:description" content={description} />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>

    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Public+Sans:ital,wght@0,400;0,700;1,400&family=Rubik:wght@500;600&display=swap"
      rel="stylesheet"
    />

    <script is:inline>
      // This code is inlined in the head to make dark mode instant & blocking.
      const getThemePreference = () => {
        if (
          typeof localStorage !== "undefined" &&
          localStorage.getItem("theme")
        ) {
          return localStorage.getItem("theme");
        }
        return window.matchMedia("(prefers-color-scheme: dark)").matches
          ? "dark"
          : "light";
      };
      const isDark = getThemePreference() === "dark";
      document.documentElement.classList[isDark ? "add" : "remove"](
        "theme-dark"
      );

      if (typeof localStorage !== "undefined") {
        // Watch the document element and persist user preference when it changes.
        const observer = new MutationObserver(() => {
          const isDark =
            document.documentElement.classList.contains("theme-dark");
          localStorage.setItem("theme", isDark ? "dark" : "light");
        });
        observer.observe(document.documentElement, {
          attributes: true,
          attributeFilter: ["class"],
        });
      }
    </script>

    <script is:inline defer src="fontawesome-5/all-5.15.4.js"></script>
  </head>
  <body class="backgrounds">
    <Nav />
    <h1>{title}</h1>
    <article>
      <slot />
      <!-- your content is injected here -->
    </article>
    <Footer />

    <script>
      // Add “loaded” class once the document has completely loaded.
      addEventListener("load", () =>
        document.documentElement.classList.add("loaded")
      );
    </script>

    <style>
      :root {
        --_placeholder-bg: linear-gradient(transparent, transparent);
        --bg-image-main: url("/assets/backgrounds/bg-main-light-800w.jpg");
        --bg-image-main-curves: url("/assets/backgrounds/bg-main-light.svg");
        --bg-image-subtle-1: var(--_placeholder-bg);
        --bg-image-subtle-2: var(--_placeholder-bg);
        --bg-image-footer: var(--_placeholder-bg);
        --bg-svg-blend-mode: overlay;
        --bg-blend-mode: darken;
        --bg-image-aspect-ratio: 2.25;
        --bg-scale: 1.68;
        --bg-aspect-ratio: calc(var(--bg-image-aspect-ratio) / var(--bg-scale));
        --bg-gradient-size: calc(var(--bg-scale) * 100%);
      }

      :root.theme-dark {
        --bg-image-main: url("/assets/backgrounds/bg-main-dark-800w.jpg");
        --bg-image-main-curves: url("/assets/backgrounds/bg-main-dark.svg");
        --bg-svg-blend-mode: darken;
        --bg-blend-mode: lighten;
      }

      /* These backgrounds are displayed below the fold, so we lazy load them
			   once the `.loaded` class has been set.  */
      :root.loaded {
        --bg-image-subtle-1: url("/assets/backgrounds/bg-subtle-1-light-800w.jpg");
        --bg-image-subtle-2: url("/assets/backgrounds/bg-subtle-2-light-800w.jpg");
        --bg-image-footer: url("/assets/backgrounds/bg-footer-light-800w.jpg");
      }
      :root.loaded.theme-dark {
        --bg-image-subtle-1: url("/assets/backgrounds/bg-subtle-1-dark-800w.jpg");
        --bg-image-subtle-2: url("/assets/backgrounds/bg-subtle-2-dark-800w.jpg");
        --bg-image-footer: url("/assets/backgrounds/bg-footer-dark-800w.jpg");
      }

      @media (min-width: 50em) {
        :root {
          --bg-scale: 1;
          --bg-image-main: url("/assets/backgrounds/bg-main-light-1440w.jpg");
        }
        :root.theme-dark {
          --bg-image-main: url("/assets/backgrounds/bg-main-dark-1440w.jpg");
        }

        :root.loaded {
          --bg-image-subtle-1: url("/assets/backgrounds/bg-subtle-1-light-1440w.jpg");
          --bg-image-subtle-2: url("/assets/backgrounds/bg-subtle-2-light-1440w.jpg");
          --bg-image-footer: url("/assets/backgrounds/bg-footer-light-1440w.jpg");
        }
        :root.loaded.theme-dark {
          --bg-image-subtle-1: url("/assets/backgrounds/bg-subtle-1-dark-1440w.jpg");
          --bg-image-subtle-2: url("/assets/backgrounds/bg-subtle-2-dark-1440w.jpg");
          --bg-image-footer: url("/assets/backgrounds/bg-footer-dark-1440w.jpg");
        }
      }

      .backgrounds {
        min-height: 100%;
        isolation: isolate;
        background:
					/*noise*/ url("/assets/backgrounds/noise.png") top
            center/220px repeat,
          /*footer*/ var(--bg-image-footer) bottom
            center/var(--bg-gradient-size) no-repeat,
          /*header1*/ var(--bg-image-main-curves) top
            center/var(--bg-gradient-size) no-repeat,
          /*header2*/ var(--bg-image-main) top center/var(--bg-gradient-size)
            no-repeat,
          /*base*/ var(--gray-999);
        background-blend-mode: /*noise*/ overlay,
          /*footer*/ var(--bg-blend-mode), /*header1*/ var(--bg-svg-blend-mode),
          /*header2*/ normal, /*base*/ normal;
      }
      @media (forced-colors: active) {
        /* Deactivate custom backgrounds for high contrast users. */
        .backgrounds {
          background: none;
          background-blend-mode: none;
          --bg-gradient-size: none;
        }
      }
    </style>
  </body>
</html>
