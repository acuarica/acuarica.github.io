---
import { getCollection, getEntryBySlug } from "astro:content";
import { getRenderedCollection, sort } from "@utils";

import Page from "@layouts/Page.astro";

import About from "@components/About.mdx";
import Hero from "@components/Hero.astro";
import Skill from "@components/Skill.astro";
import Timeline from "@components/Timeline.astro";

const about = await getEntryBySlug('about', 'index');
const skills = about.data.skills;
const experience = sort(await getRenderedCollection("experience"));
const education = sort(await getRenderedCollection("education"));
const posts = await getRenderedCollection("posts");
const publications = await getCollection("publications");
---

<Page title="Luis Mastrangelo">
  <Hero title="sadf" />
  <About />
  <section id="skills">
    <h2>Skills</h2>
    <ul>
      {
        skills.map((skill) => (
          <Skill
            title={skill.title}
            subtitle={skill.subtitle}
            icon={skill.icon}
          />
        ))
      }
    </ul>
  </section>

  <section id="experience">
    <h2>Experience</h2>
    <div class="steps steps-vertical w-full">
      {
        experience.map((entry) => (
          <Timeline
            title={entry.data.role}
            subtitle={entry.data.company.name}
            date={entry.data.date.label}
          >
            <entry.Content />
          </Timeline>
          // <li data-content={entry.date} class="step step-secondary">
          // <p>
          // {entry.title}
          // {entry.content}</p>
          // </li>
        ))
      }
    </div>
  </section>

  <section id="education">
    <h2>Education</h2>
    <ul class="steps steps-vertical">
      {
        education.map((entry) => (
          <Timeline title={entry.data.title} desc={entry.data.school.name} />
          // <li data-content={entry.date} class="step step-secondary">
          // <p>
          // {entry.title}
          // {entry.content}</p>
          // </li>
        ))
      }
    </ul>
  </section>

  <section id="posts">
    <h2>Posts</h2>
    <ul>
      {
        posts.map((post) => (
          <li>
            <a href={`/posts/${post.slug}`}>{post.data.title}</a>
            <time datetime={post.data.date.toISOString()}>
              {post.data.date.toDateString()}
            </time>
          </li>
        ))
      }
    </ul>
  </section>

  <section id="publications">
    <h2>Publications</h2>
    <ul>
      {
        publications.map(async (post) => (
          <li>
            <a href={`/publications/${post.slug}`}>{post.data.title}</a>
            <time datetime={post.data.date.toISOString()}>
              {post.data.date.toDateString()}
            </time>
          </li>
        ))
      }
    </ul>
  </section>
</Page>

<style>
  .skill-card {
    display: flex;
    height: 7rem;
    justify-content: center;
    align-items: center;
    text-align: center;
    border: 1px solid var(--gray-800);
    border-radius: 1.5rem;
    color: var(--gray-300);
    background: var(--gradient-subtle);
    box-shadow: var(--shadow-sm);
  }

  .steps-vertical .step {
    grid-template-columns: 200px 1fr;
  }

  .steps-vertical .step::after {
    width: 180px;
  }

  section {
    display: flex;
    /* flex-direction: column; */
    gap: 0.5rem;
    /* color: var(--gray-200); */
  }

  section > h2 {
    width: 15rem;
    /* grid-column-start: 1;
    font-size: var(--text-xl);
    color: var(--gray-0); */
  }

  section > ul {
    /* grid-column: 2 / 4; */
  }

  @media (min-width: 640px) {
    section {
      /* display: flex; */
      /* flex-direction: column; */
      /* gap: 0.5rem; */
      /* color: var(--gray-200); */
    }

    section > h2 {
      /* grid-column-start: 1; */
      /* font-size: var(--text-xl); */
      /* color: var(--gray-0); */
    }

    section > ul {
      /* grid-column: 2 / 4; */
    }
  }
</style>
